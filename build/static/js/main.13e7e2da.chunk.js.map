{"version":3,"sources":["logo.svg","Utils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","speed","progress","status","Logo","react_default","a","createElement","style","margin","display","flexWrap","alignItems","justifyContent","href","target","src","width","moment","require","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","event","preventDefault","elements","value","history","className","logo","alt","onSubmit","type","id","placeholder","Component","Dashboard","_this2","state","data","arguments","length","undefined","map","d","objectSpread","children","makeData","es","columns","Header","render","utc","format","accessor","Cell","row","height","backgroundColor","borderRadius","concat","transition","color","defaultPageSize","Utils_Logo","React","App","BrowserRouter","Route","exact","path","Redirect","to","component","App_App","document","getElementById","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13e7e2da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport namor from \"namor\";\nimport \"./index.css\";\n\nconst range = len => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst newPerson = () => {\n  const statusChance = Math.random();\n  return {\n    firstName: namor.generate({ words: 1, numbers: 0 }),\n    lastName: namor.generate({ words: 1, numbers: 0 }),\n    age: Math.floor(Math.random() * 30),\n    speed: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status:\n      statusChance > 0.66\n        ? \"dangerous\"\n        : statusChance > 0.33\n        ? \"warning\"\n        : \"safe\"\n  };\n};\n\nexport function makeData(len = 10) {\n  return range(len).map(d => {\n    return {\n      ...newPerson(),\n      children: range(10).map(newPerson)\n    };\n  });\n}\n\nexport const Logo = () => (\n  <div\n    style={{\n      margin: \"1rem auto\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    For more examples, visit {\"\"}\n    <br />\n    <a href=\"https://github.com/react-tools/react-table\" target=\"_blank\">\n      <img\n        src=\"https://github.com/react-tools/media/raw/master/logo-react-table.png\"\n        style={{ width: `150px`, margin: \".5em auto .3em\" }}\n      />\n    </a>\n  </div>\n);\n\nexport const Tips = () => (\n  <div style={{ textAlign: \"center\" }}>\n    <em>Tip: Hold shift when sorting to multi-sort!</em>\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Route,Redirect } from \"react-router-dom\";\n// import { Plugins } from \"@capacitor/core\";\n// const { Geolocation } = Plugins;\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { makeData, Logo, Tips } from \"./Utils\";\nvar moment = require(\"moment\");\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(event) {\n    //https://uttpic.tech/checkcar/vin=value1&password=value2\n    event.preventDefault();\n    const vin = event.target.elements[0].value;\n    const password = event.target.elements[1].value;\n\n    // fetch(`https://uttpic.tech/checkcar/${vin}/${password}`, res => {\n    //   if (res.OK){\n\n    //   }\n    // })\n    this.props.history.push(\"/dashboard\");\n  }\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Enter your VIN:\n              <input type=\"text\" id=\"username\" placeholder=\"VIN\" />\n            </label>\n\n            <br />\n            <label>\n              Enter you passcode:\n              <input\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Choose Password\"\n              />\n              <br />\n            </label>\n            <button>Login</button>\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: makeData()\n    };\n  }\n  render() {\n    const { data } = this.state;\n    const cmake = \"Toy\";\n    const cmodel = \"X Type\";\n    const cyear = \"2019\";\n    const cmileage = \"654\";\n\n    return (\n      <div>\n        <br />\n        <h2>Car Information:</h2>\n        <p>\n          Make: {cmake} | Model: {cmodel} | Year: {cyear} <br />\n          vin:1GHBA3216511 | Mileage: {cmileage}\n        </p>\n        <br />\n\n        <ReactTable\n          data={data}\n          columns={[\n            {\n              id: \"updatedAt\",\n              Header: \"Date (MM-DD-YYYY)\",\n              render: props => (\n                <span>{moment.utc(props.value).format(\"MM-DD-YYYY\")}</span>\n              )\n              // accessor: d => {\n              //   return Moment(d.updated_at)\n              //     .local()\n              //     .format(\"MM-DD-YYYY hh:mm:ss a\");\n              // }\n            },\n            // {\n            //   Header: \"Name\",\n            //   columns: [\n            //     {\n            //       Header: \"First Name\",\n            //       accessor: \"firstName\"\n            //     },\n            //     {\n            //       Header: \"Last Name\",\n            //       id: \"lastName\",\n            //       accessor: d => d.lastName\n            //     },\n            {\n              Header: \"Speed (Mph)\",\n              accessor: \"speed\"\n              // Cell: row => (\n              //   <span\n              //     style={{\n              //       color:\n              //         row.value > 75\n              //           ? \"#ff2e00\"\n              //           : row.value > 65\n              //           ? \"#ffbf00\"\n              //           : \"#57d500\",\n              //       transition: \"all .3s ease\"\n              //     }}\n              //   >\n              //     &#x25cf;\n              //   </span>\n              // )\n            },\n\n            {\n              Header: \"Info\",\n              columns: [\n                {\n                  Header: \"Profile Progress\",\n                  accessor: \"speed\",\n                  Cell: row => (\n                    <div\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"#dadada\",\n                        borderRadius: \"2px\"\n                      }}\n                    >\n                      <div\n                        style={{\n                          width: `${row.value}%`,\n                          height: \"100%\",\n                          backgroundColor:\n                            row.value < 65\n                              ? \"#85cc00\"\n                              : row.value < 80\n                              ? \"#ffbf00\"\n                              : \"#ff2e00\",\n                          borderRadius: \"2px\",\n                          transition: \"all .2s ease-out\"\n                        }}\n                      />\n                    </div>\n                  )\n                },\n                {\n                  Header: \"Status\",\n                  accessor: \"status\",\n                  Cell: row => (\n                    <span>\n                      <span\n                        style={{\n                          color:\n                            row.value === \"dangerous\"\n                              ? \"#ff2e00\"\n                              : row.value === \"warning\"\n                              ? \"#ffbf00\"\n                              : \"#57d500\",\n                          transition: \"all .3s ease\"\n                        }}\n                      >\n                        &#x25cf;\n                      </span>{\" \"}\n                      {row.value === \"dangerous\"\n                        ? \"You got a ticket\"\n                        : row.value === \"warning\"\n                        ? `First Warning`\n                        : \"Your cool\"}\n                    </span>\n                  )\n                }\n              ]\n            }\n          ]}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n        />\n        <br />\n        <Logo />\n      </div>\n    );\n  }\n}\n//setInterval(render(<Dashboard />, document.getElementById(\"root\")), 1000);\n\nrender(<App />, document.getElementById(\"root\"));\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <div>\n          <Route exact path=\"/\" render={() => (\n              <Redirect to=\"/login\" />\n          )}/>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}